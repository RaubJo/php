name: Builds

on:
  pull_request:
  push:
    paths:
    - '**.nix'
    - flake.lock

jobs:
  determine-matrix:
    name: Figure out the packages we need to build
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install the Nix package manager
        uses: cachix/install-nix-action@v17

      - id: set-matrix
        run: |
          echo "::set-output name=matrix::$(
            nix eval --json --impure \
              --expr 'builtins.attrNames (import ./.).packages.x86_64-linux'
          )"

  build:
    name: '${{ matrix.packages }} on ${{ matrix.operating-system }}'
    needs: [determine-matrix]
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        packages: ${{fromJson(needs.determine-matrix.outputs.matrix)}}
        operating-system: [ubuntu-latest, macOS-latest]

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install the Nix package manager
        uses: cachix/install-nix-action@v17

      - uses: cachix/cachix-action@v11
        with:
          name: nix-shell
          # If you chose API tokens for write access OR if you have a private cache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build ${{ matrix.packages }}
        run: |
          nix build .#${{ matrix.packages }}

      - name: Build XDebug extension
        if: "!contains( matrix.packages, 'env-' )"
        continue-on-error: true
        run: |
          nix build .#${{ matrix.packages }}.extensions.xdebug

      - name: Build pcov extension
        if: "!contains( matrix.packages, 'env-' )"
        continue-on-error: true
        run: |
          nix build .#${{ matrix.packages }}.extensions.pcov

      - name: Build oci8 extension
        if: "!contains( matrix.packages, 'env-' )"
        continue-on-error: true
        run: |
          nix build .#${{ matrix.packages }}.extensions.oci8
